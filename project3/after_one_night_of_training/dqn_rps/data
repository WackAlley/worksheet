{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVMAAAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLmRxbi5wb2xpY2llc5SMCURRTlBvbGljeZSTlC4=",
        "__module__": "stable_baselines3.dqn.policies",
        "__annotations__": "{'q_net': <class 'stable_baselines3.dqn.policies.QNetwork'>, 'q_net_target': <class 'stable_baselines3.dqn.policies.QNetwork'>}",
        "__doc__": "\n    Policy class with Q-Value Net and target net for DQN\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ",
        "__init__": "<function DQNPolicy.__init__ at 0x723506461ee0>",
        "_build": "<function DQNPolicy._build at 0x723506461f80>",
        "make_q_net": "<function DQNPolicy.make_q_net at 0x723506462020>",
        "forward": "<function DQNPolicy.forward at 0x7235064620c0>",
        "_predict": "<function DQNPolicy._predict at 0x723506462160>",
        "_get_constructor_parameters": "<function DQNPolicy._get_constructor_parameters at 0x723506462200>",
        "set_training_mode": "<function DQNPolicy.set_training_mode at 0x7235064622a0>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x723506474380>"
    },
    "verbose": 1,
    "policy_kwargs": {},
    "num_timesteps": 5000000,
    "_total_timesteps": 5000000,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": null,
    "start_time": 1734312058223794978,
    "learning_rate": 0.0001,
    "tensorboard_log": null,
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVhwAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYQAAAAAAAAAAAAAAEA/gAAAAUA/pwAAACUjAVudW1weZSMBWR0eXBllJOUjAJpMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwFLBEsEh5SMAUOUdJRSlC4="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAAGUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVhwAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYQAAAAAAAAAAAAAAMA/gAAAAUA/pwAAACUjAVudW1weZSMBWR0eXBllJOUjAJpMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwFLBEsEh5SMAUOUdJRSlC4="
    },
    "_episode_num": 956254,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.0,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "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"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 1249975,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVwgEAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmkxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGKMBl9zaGFwZZRLBEsEhpSMA2xvd5SMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUaAtLBEsEhpSMAUOUdJRSlIwNYm91bmRlZF9iZWxvd5RoEyiWEAAAAAAAAAABAQEBAQEBAQEBAQEBAQEBlGgIjAJiMZSJiIeUUpQoSwNoDE5OTkr/////Sv////9LAHSUYksESwSGlGgWdJRSlIwEaGlnaJRoEyiWEAAAAAAAAAAGBgYGBgYGBgYGBgYGBgYGlGgLSwRLBIaUaBZ0lFKUjA1ib3VuZGVkX2Fib3ZllGgTKJYQAAAAAAAAAAEBAQEBAQEBAQEBAQEBAQGUaB1LBEsEhpRoFnSUUpSMCGxvd19yZXBylIwBMJSMCWhpZ2hfcmVwcpSMATaUjApfbnBfcmFuZG9tlE51Yi4=",
        "dtype": "int8",
        "_shape": [
            4,
            4
        ],
        "low": "[[0 0 0 0]\n [0 0 0 0]\n [0 0 0 0]\n [0 0 0 0]]",
        "bounded_below": "[[ True  True  True  True]\n [ True  True  True  True]\n [ True  True  True  True]\n [ True  True  True  True]]",
        "high": "[[6 6 6 6]\n [6 6 6 6]\n [6 6 6 6]\n [6 6 6 6]]",
        "bounded_above": "[[ True  True  True  True]\n [ True  True  True  True]\n [ True  True  True  True]\n [ True  True  True  True]]",
        "low_repr": "0",
        "high_repr": "6",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.discrete.Discrete'>",
        ":serialized:": "gAWVpAEAAAAAAACMGWd5bW5hc2l1bS5zcGFjZXMuZGlzY3JldGWUjAhEaXNjcmV0ZZSTlCmBlH2UKIwBbpSMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCaTiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYkMIBQAAAAAAAACUhpRSlIwFc3RhcnSUaAhoDkMIAAAAAAAAAACUhpRSlIwGX3NoYXBllCmMBWR0eXBllGgOjApfbnBfcmFuZG9tlIwUbnVtcHkucmFuZG9tLl9waWNrbGWUjBBfX2dlbmVyYXRvcl9jdG9ylJOUjAVQQ0c2NJRoG4wUX19iaXRfZ2VuZXJhdG9yX2N0b3KUk5SGlFKUfZQojA1iaXRfZ2VuZXJhdG9ylIwFUENHNjSUjAVzdGF0ZZR9lChoJooQYhK8dWF4WEQnTN148GKjRowDaW5jlIoR2X9VnrQggIOWIhgCDFpmhwB1jApoYXNfdWludDMylEsAjAh1aW50ZWdlcpSKBX2BIq8AdWJ1Yi4=",
        "n": "5",
        "start": "0",
        "_shape": [],
        "dtype": "int64",
        "_np_random": "Generator(PCG64)"
    },
    "n_envs": 1,
    "buffer_size": 1000000,
    "batch_size": 32,
    "learning_starts": 100,
    "tau": 1.0,
    "gamma": 0.99,
    "gradient_steps": 1,
    "optimize_memory_usage": false,
    "replay_buffer_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVNQAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5idWZmZXJzlIwMUmVwbGF5QnVmZmVylJOULg==",
        "__module__": "stable_baselines3.common.buffers",
        "__annotations__": "{'observations': <class 'numpy.ndarray'>, 'next_observations': <class 'numpy.ndarray'>, 'actions': <class 'numpy.ndarray'>, 'rewards': <class 'numpy.ndarray'>, 'dones': <class 'numpy.ndarray'>, 'timeouts': <class 'numpy.ndarray'>}",
        "__doc__": "\n    Replay buffer used in off-policy algorithms like SAC/TD3.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param device: PyTorch device\n    :param n_envs: Number of parallel environments\n    :param optimize_memory_usage: Enable a memory efficient variant\n        of the replay buffer which reduces by almost a factor two the memory used,\n        at a cost of more complexity.\n        See https://github.com/DLR-RM/stable-baselines3/issues/37#issuecomment-637501195\n        and https://github.com/DLR-RM/stable-baselines3/pull/28#issuecomment-637559274\n        Cannot be used in combination with handle_timeout_termination.\n    :param handle_timeout_termination: Handle timeout termination (due to timelimit)\n        separately and treat the task as infinite horizon task.\n        https://github.com/DLR-RM/stable-baselines3/issues/284\n    ",
        "__init__": "<function ReplayBuffer.__init__ at 0x723506753d80>",
        "add": "<function ReplayBuffer.add at 0x723506753e20>",
        "sample": "<function ReplayBuffer.sample at 0x723506753ec0>",
        "_get_samples": "<function ReplayBuffer._get_samples at 0x723506753f60>",
        "_maybe_cast_dtype": "<staticmethod(<function ReplayBuffer._maybe_cast_dtype at 0x723506758040>)>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x723506754440>"
    },
    "replay_buffer_kwargs": {},
    "train_freq": {
        ":type:": "<class 'stable_baselines3.common.type_aliases.TrainFreq'>",
        ":serialized:": "gAWVYQAAAAAAAACMJXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi50eXBlX2FsaWFzZXOUjAlUcmFpbkZyZXGUk5RLBGgAjBJUcmFpbkZyZXF1ZW5jeVVuaXSUk5SMBHN0ZXCUhZRSlIaUgZQu"
    },
    "use_sde_at_warmup": false,
    "exploration_initial_eps": 1.0,
    "exploration_final_eps": 0.05,
    "exploration_fraction": 0.1,
    "target_update_interval": 10000,
    "_n_calls": 5000000,
    "max_grad_norm": 10,
    "exploration_rate": 0.05,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWV2AMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLBUsTQyaVAZcAdAEAAAAAAAAAAAIAiQF8AKsBAAAAAAAAqwEAAAAAAABTAJROhZSMBWZsb2F0lIWUjBJwcm9ncmVzc19yZW1haW5pbmeUhZSMVS9ob21lL21hcnZpbi9hbmFjb25kYTMvbGliL3B5dGhvbjMuMTIvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUjAg8bGFtYmRhPpSMIWdldF9zY2hlZHVsZV9mbi48bG9jYWxzPi48bGFtYmRhPpRLYkMS+IAApGWpTtA7TdMsTtMmT4AAlEMAlIwOdmFsdWVfc2NoZWR1bGWUhZQpdJRSlH2UKIwLX19wYWNrYWdlX1+UjBhzdGFibGVfYmFzZWxpbmVzMy5jb21tb26UjAhfX25hbWVfX5SMHnN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi51dGlsc5SMCF9fZmlsZV9flIxVL2hvbWUvbWFydmluL2FuYWNvbmRhMy9saWIvcHl0aG9uMy4xMi9zaXRlLXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMzL2NvbW1vbi91dGlscy5weZR1Tk5oAIwQX21ha2VfZW1wdHlfY2VsbJSTlClSlIWUdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoI32UfZQoaBpoD4wMX19xdWFsbmFtZV9flGgQjA9fX2Fubm90YXRpb25zX1+UfZSMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgbjAdfX2RvY19flE6MC19fY2xvc3VyZV9flGgAjApfbWFrZV9jZWxslJOUaAIoaAcoSwFLAEsASwFLAUsTQwiVAZcAiQFTAJRoCSmMAV+UhZRoDowEZnVuY5SMGWNvbnN0YW50X2ZuLjxsb2NhbHM+LmZ1bmOUS4ZDCPiAANgPEogKlGgSjAN2YWyUhZQpdJRSlGgXTk5oHylSlIWUdJRSlGglaD99lH2UKGgaaDVoKGg2aCl9lGgrTmgsTmgtaBtoLk5oL2gxRz8aNuLrHEMthZRSlIWUjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjCFlFKUhZRoRl2UaEh9lHWGlIZSMC4="
    },
    "batch_norm_stats": [],
    "batch_norm_stats_target": [],
    "exploration_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVpgMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLBEsTQzqVA5cAZAF8AHoKAACJAmtEAAByAokBUwCJA2QBfAB6CgAAiQGJA3oKAAB6BQAAiQJ6CwAAegAAAFMAlE5LAYaUKYwScHJvZ3Jlc3NfcmVtYWluaW5nlIWUjFUvaG9tZS9tYXJ2aW4vYW5hY29uZGEzL2xpYi9weXRob24zLjEyL3NpdGUtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lIwEZnVuY5SMG2dldF9saW5lYXJfZm4uPGxvY2Fscz4uZnVuY5RLdEM1+IAA2AwN0BAi0QwioGzSCzLYExaISuATGJhB0CAy0RwysHO4VbF70RtDwGzRG1LRE1LQDFKUQwCUjANlbmSUjAxlbmRfZnJhY3Rpb26UjAVzdGFydJSHlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UjFUvaG9tZS9tYXJ2aW4vYW5hY29uZGEzL2xpYi9weXRob24zLjEyL3NpdGUtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lHVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUaB8pUpRoHylSlIeUdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoJX2UfZQoaBpoDYwMX19xdWFsbmFtZV9flGgOjA9fX2Fubm90YXRpb25zX1+UfZQoaAqMCGJ1aWx0aW5zlIwFZmxvYXSUk5SMBnJldHVybpRoL3WMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgbjAdfX2RvY19flE6MC19fY2xvc3VyZV9flGgAjApfbWFrZV9jZWxslJOURz+pmZmZmZmahZRSlGg3Rz+5mZmZmZmahZRSlGg3Rz/wAAAAAAAAhZRSlIeUjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjAu"
    }
}